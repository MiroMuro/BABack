scalar Upload

type User {
  username: String!
  favoriteGenre: String!
  id: ID!
}
type Token {
  value: String!
}
type Query {
  bookCount: Int!
  authorCount: Int!
  allBooks(author: String, genre: String): [Book!]!
  allAuthors: [Author]
  allGenres: [String!]!
  me: User!
  getBookImage(bookId: ID!): String
}
type Author {
  name: String!
  id: ID!
  born: Int
  bookCount: Int
}
type Book {
  title: String!
  published: Int!
  author: Author!
  id: ID!
  imageId: String
  genres: [String!]!
}
type Subscription {
  bookAdded: Book!
}
type Subscription {
  authorUpdated: Author!
}
type Mutation {
  addBook(
    title: String!
    author: String!
    published: Int!
    genres: [String!]!
  ): Book

  editAuthor(name: String!, setBornTo: Int!): Author

  createUser(username: String!, favoriteGenre: String!, password: String!): User

  login(username: String!, password: String!): Token

  logout: Boolean

  uploadBookImage(file: Upload!, bookId: ID!): Book!
}
